plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version '2.7'
    id 'org.cyclonedx.bom' version '1.8.1'
}

group = 'com.github.jitpack'
version = '2.0'

sourceCompatibility = 1.8 // java 8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
}

sonarqube {
    properties {
        property 'sonar.host.url', 'http://192.168.1.12:9000/'
        property 'sonar.login', 'a39a83e08cd27c6aaaeb3db1e6e3ad2874f0e30d'
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

cyclonedxBom {
    includeConfigs = ["runtimeClasspath"]
    projectType = "application"
    schemaVersion = "1.5"
    destination = file("build/reports")
    outputName = "bom"
    outputFormat = "xml"
    includeBomSerialNumber = false
    includeLicenseText = false
    componentVersion = "2.0.0"
}

// Adding a task to generate the CycloneDX BOM
task generateBom(type: org.cyclonedx.gradle.CycloneDxBomTask) {
    dependsOn configurations.runtimeClasspath
}

// Make sure the BOM generation is executed before the build
build.dependsOn generateBom

wrapper {
    gradleVersion = "7.3.3"
    distributionType = Wrapper.DistributionType.ALL
}




